// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(uuid())
  name           String
  phone          String
  role           UserRole[]       @default([])
  updatedAt      DateTime         @updatedAt
  createdAt      DateTime         @default(now())
  teacherClasses Class[]
  words          WordToUser[]
  class          ClassToUser[]
  CategoryToUser CategoryToUser[]
}

enum UserRole {
  Teacher
  Admin
  Student
}

model Class {
  id          String            @id @default(uuid())
  teacherId   String
  teacher     User              @relation(fields: [teacherId], references: [id])
  description String?
  title       String
  categories  ClassToCategory[]
  users       ClassToUser[]
}

model Word {
  id             String           @id @default(uuid())
  value          String
  translation    String
  isCategorized  Boolean          @default(false)
  languageId     String
  language       Language         @relation(fields: [languageId], references: [id])
  createdAt      DateTime         @default(now())
  users          WordToUser[]
  categories WordToCategory[]
}

model Language {
  id    String @id @default(uuid())
  value String
  words Word[]
}

model Category {
  id             String            @id @default(uuid())
  value          String
  authorId       String
  words          WordToCategory[]
  classes        ClassToCategory[]
  CategoryToUser CategoryToUser[]
}

model WordToCategory {
  word       Word     @relation(fields: [wordId], references: [id])
  wordId     String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  assignedAt DateTime @default(now())

  @@id([wordId, categoryId])
}

model CategoryToUser {
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  assignedAt DateTime @default(now())

  @@id([categoryId, userId])
}

model ClassToCategory {
  class      Class    @relation(fields: [classId], references: [id])
  classId    String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  assignedAt DateTime @default(now())

  @@id([classId, categoryId])
}

model WordToUser {
  word       Word     @relation(fields: [wordId], references: [id])
  wordId     String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  assignedAt DateTime @default(now())

  @@id([wordId, userId])
}

model ClassToUser {
  class      Class    @relation(fields: [classId], references: [id])
  classId    String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  assignedAt DateTime @default(now())

  @@id([classId, userId])
}
